This is a tool designed to be used for mapping different type objects in C#. This tool can help you map property values from one object to another using a custom configuration if it was previously defined or it can map them "by default" - by gathering all common (that have the same name) properties between the two types and setting values from source object properties to destination object properties.
By setting the configuration user can define mapping rules which the mapper will then follow when mapping objects. For example you can define which properties can be ignored during the mapping, or you can define that you want to map value from property "A" on the source to the property "B" on the destination. AfterMap and BeforeMap functions can be defined in the configuration which are then invoked before/after the actual map.
This tool can also be used to create a new object of the set destination type with the property values from source being mapped to the newly created object. It can be used to create a copy of an object with the same type too.
The main concept used in this project is reflection and the main reason that I chose to do this project is because I wanted to learn more about it. Using a tool called AutoMapper gave me an idea to make my own tool that will be used for a similar cause.
This tool can be very useful for web development and "onion-layer" architecture projects mostly because it can help with mapping entity, domain and REST models.
